#N canvas 378 31 801 507 10;
#N canvas 1122 535 789 453 fm-synthesis 1;
#N canvas 0 50 450 278 (subpatch) 0;
#X array fm 100 float 1;
#A 0 0.912117 0.925144 0.937207 0.948247 0.958278 0.967279 0.975205
0.98205 0.987815 0.992488 0.996019 0.99844 0.999746 0.999929 0.998964
0.996887 0.993701 0.989398 0.983983 0.977492 0.96994 0.961307 0.951645
0.940982 0.929315 0.916678 0.903116 0.888638 0.873274 0.857081 0.840059
0.822264 0.80374 0.784492 0.764599 0.744061 0.722951 0.701285 0.679123
0.656488 0.633442 0.61 0.586235 0.562154 0.537824 0.513281 0.488549
0.463686 0.438729 0.413699 0.388648 0.363612 0.338624 0.313718 0.28892
0.26427 0.239796 0.21553 0.191497 0.167725 0.144239 0.121065 0.0982225
0.075734 0.0536211 0.0319022 0.0105946 -0.0102856 -0.0307231 -0.0507053
-0.0702177 -0.08925 -0.107793 -0.125835 -0.143369 -0.16039 -0.176888
-0.192861 -0.208304 -0.223208 -0.237578 -0.251408 -0.264698 -0.277445
-0.289649 -0.30131 -0.312427 -0.323001 -0.333035 -0.34253 -0.351489
-0.359915 -0.367797 -0.375151 -0.381979 -0.388268 -0.394044 -0.399279
-0.404004 -0.408198;
#X coords 0 1 99 -1 200 140 1 0 0;
#X restore 461 155 graph;
#X text 433 148 1;
#X text 430 218 0;
#X text 423 287 -1;
#X obj 120 82 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 1400 1;
#X obj 206 300 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 206 325 metro 100;
#X text 113 65 Carrier Frequency;
#X obj 117 112 mtof~;
#X text 111 28 * NOTE here we're using "mtof~" not "mtof". The output
from this object is an audio signal not just a float.;
#X obj 206 351 tabwrite~ fm;
#X obj 117 312 osc~;
#X obj 117 260 +~;
#X obj 132 174 osc~;
#X text 171 147 Modulation frequency in Hz;
#X floatatom 132 147 5 0 0 0 - - -, f 5;
#X obj 132 234 *~;
#X floatatom 147 206 5 0 0 0 - - -, f 5;
#X text 186 207 Modulation amount in Hz;
#X obj 117 377 outlet~;
#X connect 4 0 8 0;
#X connect 5 0 6 0;
#X connect 6 0 10 0;
#X connect 8 0 12 0;
#X connect 11 0 10 0;
#X connect 11 0 19 0;
#X connect 12 0 11 0;
#X connect 13 0 16 0;
#X connect 15 0 13 0;
#X connect 16 0 12 1;
#X connect 17 0 16 1;
#X restore 547 210 pd fm-synthesis;
#X obj 83 150 audio_recorder;
#X obj 547 65 signal_selector;
#X text 56 243 1) Record a short audio file of each of the following
scales: a) pentatonic b) whole-tone c) minor;
#X text 52 322 2) Record a short audio file with multiple scales (3
or more) playing simultaneously. Your recording should exhibit the
following: - fade in and fade out - at least one scale should be randomized
;
#X text 185 149 patch to record audio files;
#X obj 101 20 note_player;
#X text 183 19 patch to play discrete notes;
#X obj 88 188 stereo_panner;
#X text 185 187 patch to pan signals left or right;
#X obj 72 52 simple_sequences;
#X text 186 53 patch to play sequences of notes;
#X text 657 209 sub-patch for FM Synthesis;
#X obj 549 335 dac~;
#X text 734 234 audio output;
#X obj 96 116 audio_player;
#X obj 90 83 sample_loader;
#X text 185 83 patch to load audio files into memory buffers;
#X text 183 116 patch to load and play audio files;
#X text 547 42 Abstraction to generate different sound sources;
#X text 50 407 3) Record a rhythmic excerpt using samples and the metro
object. You should use multiple metro's to trigger multiple samples
at different rates.;
#X text 49 468 4) EXTRA CREDIT: Use the stereo_panner patch to move
sound sources left and right during your recordings.;
#X obj 547 179 audio_looper;
#X text 637 181 patch to loop audio playback;
#X text 544 16 ** MORE FUN THINGS TO EXPLORE;
#X obj 628 285 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 560 287 *~;
#X connect 0 0 26 0;
#X connect 6 0 1 3;
#X connect 15 0 1 2;
#X connect 25 0 26 1;
#X connect 26 0 13 0;
#X connect 26 0 13 1;
#X connect 26 0 1 3;
